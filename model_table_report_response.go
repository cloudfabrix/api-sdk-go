/*
CloudFabrix RDA Platform API

CloudFabrix RDA Platform API

API version: 3.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cfx_rda_api

import (
	"encoding/json"
)

// checks if the TableReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TableReportResponse{}

// TableReportResponse struct for TableReportResponse
type TableReportResponse struct {
	// Last sort tags used for internal puposes
	LastSortResults []string `json:"last_sort_results,omitempty"`
	// Meta information about the report, including columns and types etc
	ReportMetaData map[string]interface{} `json:"reportMetaData,omitempty"`
	// Starting offset in the filtered results
	Offset *int32 `json:"offset,omitempty"`
	// Maximum number of results to be returned per page
	Limit *int32 `json:"limit,omitempty"`
	// Sort order passed as part of request
	Sort []string `json:"sort,omitempty"`
	// Total number of results that matched the query
	TotalCount *int32 `json:"total_count,omitempty"`
	// Number of results returned in this page
	NumItems *int32 `json:"num_items,omitempty"`
	// True if this page is first page
	IsFirst *bool `json:"is_first,omitempty"`
	// True if this page is last page
	IsLast *bool `json:"is_last,omitempty"`
}

// NewTableReportResponse instantiates a new TableReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableReportResponse() *TableReportResponse {
	this := TableReportResponse{}
	var isFirst bool = true
	this.IsFirst = &isFirst
	var isLast bool = true
	this.IsLast = &isLast
	return &this
}

// NewTableReportResponseWithDefaults instantiates a new TableReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableReportResponseWithDefaults() *TableReportResponse {
	this := TableReportResponse{}
	var isFirst bool = true
	this.IsFirst = &isFirst
	var isLast bool = true
	this.IsLast = &isLast
	return &this
}

// GetLastSortResults returns the LastSortResults field value if set, zero value otherwise.
func (o *TableReportResponse) GetLastSortResults() []string {
	if o == nil || IsNil(o.LastSortResults) {
		var ret []string
		return ret
	}
	return o.LastSortResults
}

// GetLastSortResultsOk returns a tuple with the LastSortResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetLastSortResultsOk() ([]string, bool) {
	if o == nil || IsNil(o.LastSortResults) {
		return nil, false
	}
	return o.LastSortResults, true
}

// HasLastSortResults returns a boolean if a field has been set.
func (o *TableReportResponse) HasLastSortResults() bool {
	if o != nil && !IsNil(o.LastSortResults) {
		return true
	}

	return false
}

// SetLastSortResults gets a reference to the given []string and assigns it to the LastSortResults field.
func (o *TableReportResponse) SetLastSortResults(v []string) {
	o.LastSortResults = v
}

// GetReportMetaData returns the ReportMetaData field value if set, zero value otherwise.
func (o *TableReportResponse) GetReportMetaData() map[string]interface{} {
	if o == nil || IsNil(o.ReportMetaData) {
		var ret map[string]interface{}
		return ret
	}
	return o.ReportMetaData
}

// GetReportMetaDataOk returns a tuple with the ReportMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetReportMetaDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ReportMetaData) {
		return map[string]interface{}{}, false
	}
	return o.ReportMetaData, true
}

// HasReportMetaData returns a boolean if a field has been set.
func (o *TableReportResponse) HasReportMetaData() bool {
	if o != nil && !IsNil(o.ReportMetaData) {
		return true
	}

	return false
}

// SetReportMetaData gets a reference to the given map[string]interface{} and assigns it to the ReportMetaData field.
func (o *TableReportResponse) SetReportMetaData(v map[string]interface{}) {
	o.ReportMetaData = v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TableReportResponse) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TableReportResponse) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *TableReportResponse) SetOffset(v int32) {
	o.Offset = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *TableReportResponse) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *TableReportResponse) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *TableReportResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *TableReportResponse) GetSort() []string {
	if o == nil || IsNil(o.Sort) {
		var ret []string
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetSortOk() ([]string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *TableReportResponse) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given []string and assigns it to the Sort field.
func (o *TableReportResponse) SetSort(v []string) {
	o.Sort = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *TableReportResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *TableReportResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *TableReportResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetNumItems returns the NumItems field value if set, zero value otherwise.
func (o *TableReportResponse) GetNumItems() int32 {
	if o == nil || IsNil(o.NumItems) {
		var ret int32
		return ret
	}
	return *o.NumItems
}

// GetNumItemsOk returns a tuple with the NumItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetNumItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumItems) {
		return nil, false
	}
	return o.NumItems, true
}

// HasNumItems returns a boolean if a field has been set.
func (o *TableReportResponse) HasNumItems() bool {
	if o != nil && !IsNil(o.NumItems) {
		return true
	}

	return false
}

// SetNumItems gets a reference to the given int32 and assigns it to the NumItems field.
func (o *TableReportResponse) SetNumItems(v int32) {
	o.NumItems = &v
}

// GetIsFirst returns the IsFirst field value if set, zero value otherwise.
func (o *TableReportResponse) GetIsFirst() bool {
	if o == nil || IsNil(o.IsFirst) {
		var ret bool
		return ret
	}
	return *o.IsFirst
}

// GetIsFirstOk returns a tuple with the IsFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetIsFirstOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFirst) {
		return nil, false
	}
	return o.IsFirst, true
}

// HasIsFirst returns a boolean if a field has been set.
func (o *TableReportResponse) HasIsFirst() bool {
	if o != nil && !IsNil(o.IsFirst) {
		return true
	}

	return false
}

// SetIsFirst gets a reference to the given bool and assigns it to the IsFirst field.
func (o *TableReportResponse) SetIsFirst(v bool) {
	o.IsFirst = &v
}

// GetIsLast returns the IsLast field value if set, zero value otherwise.
func (o *TableReportResponse) GetIsLast() bool {
	if o == nil || IsNil(o.IsLast) {
		var ret bool
		return ret
	}
	return *o.IsLast
}

// GetIsLastOk returns a tuple with the IsLast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableReportResponse) GetIsLastOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLast) {
		return nil, false
	}
	return o.IsLast, true
}

// HasIsLast returns a boolean if a field has been set.
func (o *TableReportResponse) HasIsLast() bool {
	if o != nil && !IsNil(o.IsLast) {
		return true
	}

	return false
}

// SetIsLast gets a reference to the given bool and assigns it to the IsLast field.
func (o *TableReportResponse) SetIsLast(v bool) {
	o.IsLast = &v
}

func (o TableReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TableReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastSortResults) {
		toSerialize["last_sort_results"] = o.LastSortResults
	}
	if !IsNil(o.ReportMetaData) {
		toSerialize["reportMetaData"] = o.ReportMetaData
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	if !IsNil(o.NumItems) {
		toSerialize["num_items"] = o.NumItems
	}
	if !IsNil(o.IsFirst) {
		toSerialize["is_first"] = o.IsFirst
	}
	if !IsNil(o.IsLast) {
		toSerialize["is_last"] = o.IsLast
	}
	return toSerialize, nil
}

type NullableTableReportResponse struct {
	value *TableReportResponse
	isSet bool
}

func (v NullableTableReportResponse) Get() *TableReportResponse {
	return v.value
}

func (v *NullableTableReportResponse) Set(val *TableReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTableReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTableReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableReportResponse(val *TableReportResponse) *NullableTableReportResponse {
	return &NullableTableReportResponse{value: val, isSet: true}
}

func (v NullableTableReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


