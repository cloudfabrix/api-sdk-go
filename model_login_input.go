/*
CloudFabrix RDA Platform API

CloudFabrix RDA Platform API

API version: 3.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cfx_rda_api

import (
	"encoding/json"
)

// checks if the LoginInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginInput{}

// LoginInput struct for LoginInput
type LoginInput struct {
	User string `json:"user"`
	Password string `json:"password"`
}

// NewLoginInput instantiates a new LoginInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginInput(user string, password string) *LoginInput {
	this := LoginInput{}
	this.User = user
	this.Password = password
	return &this
}

// NewLoginInputWithDefaults instantiates a new LoginInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginInputWithDefaults() *LoginInput {
	this := LoginInput{}
	return &this
}

// GetUser returns the User field value
func (o *LoginInput) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *LoginInput) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *LoginInput) SetUser(v string) {
	o.User = v
}

// GetPassword returns the Password field value
func (o *LoginInput) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *LoginInput) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *LoginInput) SetPassword(v string) {
	o.Password = v
}

func (o LoginInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

type NullableLoginInput struct {
	value *LoginInput
	isSet bool
}

func (v NullableLoginInput) Get() *LoginInput {
	return v.value
}

func (v *NullableLoginInput) Set(val *LoginInput) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginInput) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginInput(val *LoginInput) *NullableLoginInput {
	return &NullableLoginInput{value: val, isSet: true}
}

func (v NullableLoginInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


