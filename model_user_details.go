/*
CloudFabrix RDA Platform API

CloudFabrix RDA Platform API

API version: 3.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cfx_rda_api

import (
	"encoding/json"
)

// checks if the UserDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDetails{}

// UserDetails Response for isUserAuthenticated request. This response contains all the user information that is currently logged in.
type UserDetails struct {
	// Whether user is authenticated
	Authenticated *bool `json:"authenticated,omitempty"`
	// Company the user belongs to
	Company *string `json:"company,omitempty"`
	// First name
	FirstName *string `json:"first_name,omitempty"`
	// Id of the user (email address)
	Id *string `json:"id,omitempty"`
	// Alias to 'authenticated'
	IsAuthenticated *bool `json:"is_authenticated,omitempty"`
	// Is the user a workspace admin
	IsWorkspaceadmin *bool `json:"is_workspaceadmin,omitempty"`
	// Is the user a workspace creator
	IsWorkspacecreator *bool `json:"is_workspacecreator,omitempty"`
	// Last Name
	LastName *bool `json:"last_name,omitempty"`
	// Alias to last_name
	Lastname *bool `json:"lastname,omitempty"`
	// Login time in ISO format
	LoginTime *string `json:"login_time,omitempty"`
	// Authentication Token
	RdacAuthToken *string `json:"rdac_auth_token,omitempty"`
	// Whether user is a remote user or a local user
	RemoteUser *bool `json:"remote_user,omitempty"`
	// User Role
	Role *string `json:"role,omitempty"`
	// Current session id
	SessionId *string `json:"session_id,omitempty"`
	// Current status of the user
	Status *string `json:"status,omitempty"`
	// Tenant ID of the user
	Tenantid *string `json:"tenantid,omitempty"`
	// alias to 'id'
	User *string `json:"user,omitempty"`
	// Name of the workspace
	Workspace *string `json:"workspace,omitempty"`
	// ID of the workspace
	Workspaceid *string `json:"workspaceid,omitempty"`
}

// NewUserDetails instantiates a new UserDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDetails() *UserDetails {
	this := UserDetails{}
	return &this
}

// NewUserDetailsWithDefaults instantiates a new UserDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDetailsWithDefaults() *UserDetails {
	this := UserDetails{}
	return &this
}

// GetAuthenticated returns the Authenticated field value if set, zero value otherwise.
func (o *UserDetails) GetAuthenticated() bool {
	if o == nil || IsNil(o.Authenticated) {
		var ret bool
		return ret
	}
	return *o.Authenticated
}

// GetAuthenticatedOk returns a tuple with the Authenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetAuthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Authenticated) {
		return nil, false
	}
	return o.Authenticated, true
}

// HasAuthenticated returns a boolean if a field has been set.
func (o *UserDetails) HasAuthenticated() bool {
	if o != nil && !IsNil(o.Authenticated) {
		return true
	}

	return false
}

// SetAuthenticated gets a reference to the given bool and assigns it to the Authenticated field.
func (o *UserDetails) SetAuthenticated(v bool) {
	o.Authenticated = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *UserDetails) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *UserDetails) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *UserDetails) SetCompany(v string) {
	o.Company = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UserDetails) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UserDetails) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UserDetails) SetFirstName(v string) {
	o.FirstName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserDetails) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UserDetails) SetId(v string) {
	o.Id = &v
}

// GetIsAuthenticated returns the IsAuthenticated field value if set, zero value otherwise.
func (o *UserDetails) GetIsAuthenticated() bool {
	if o == nil || IsNil(o.IsAuthenticated) {
		var ret bool
		return ret
	}
	return *o.IsAuthenticated
}

// GetIsAuthenticatedOk returns a tuple with the IsAuthenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetIsAuthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAuthenticated) {
		return nil, false
	}
	return o.IsAuthenticated, true
}

// HasIsAuthenticated returns a boolean if a field has been set.
func (o *UserDetails) HasIsAuthenticated() bool {
	if o != nil && !IsNil(o.IsAuthenticated) {
		return true
	}

	return false
}

// SetIsAuthenticated gets a reference to the given bool and assigns it to the IsAuthenticated field.
func (o *UserDetails) SetIsAuthenticated(v bool) {
	o.IsAuthenticated = &v
}

// GetIsWorkspaceadmin returns the IsWorkspaceadmin field value if set, zero value otherwise.
func (o *UserDetails) GetIsWorkspaceadmin() bool {
	if o == nil || IsNil(o.IsWorkspaceadmin) {
		var ret bool
		return ret
	}
	return *o.IsWorkspaceadmin
}

// GetIsWorkspaceadminOk returns a tuple with the IsWorkspaceadmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetIsWorkspaceadminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWorkspaceadmin) {
		return nil, false
	}
	return o.IsWorkspaceadmin, true
}

// HasIsWorkspaceadmin returns a boolean if a field has been set.
func (o *UserDetails) HasIsWorkspaceadmin() bool {
	if o != nil && !IsNil(o.IsWorkspaceadmin) {
		return true
	}

	return false
}

// SetIsWorkspaceadmin gets a reference to the given bool and assigns it to the IsWorkspaceadmin field.
func (o *UserDetails) SetIsWorkspaceadmin(v bool) {
	o.IsWorkspaceadmin = &v
}

// GetIsWorkspacecreator returns the IsWorkspacecreator field value if set, zero value otherwise.
func (o *UserDetails) GetIsWorkspacecreator() bool {
	if o == nil || IsNil(o.IsWorkspacecreator) {
		var ret bool
		return ret
	}
	return *o.IsWorkspacecreator
}

// GetIsWorkspacecreatorOk returns a tuple with the IsWorkspacecreator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetIsWorkspacecreatorOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWorkspacecreator) {
		return nil, false
	}
	return o.IsWorkspacecreator, true
}

// HasIsWorkspacecreator returns a boolean if a field has been set.
func (o *UserDetails) HasIsWorkspacecreator() bool {
	if o != nil && !IsNil(o.IsWorkspacecreator) {
		return true
	}

	return false
}

// SetIsWorkspacecreator gets a reference to the given bool and assigns it to the IsWorkspacecreator field.
func (o *UserDetails) SetIsWorkspacecreator(v bool) {
	o.IsWorkspacecreator = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UserDetails) GetLastName() bool {
	if o == nil || IsNil(o.LastName) {
		var ret bool
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetLastNameOk() (*bool, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UserDetails) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given bool and assigns it to the LastName field.
func (o *UserDetails) SetLastName(v bool) {
	o.LastName = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *UserDetails) GetLastname() bool {
	if o == nil || IsNil(o.Lastname) {
		var ret bool
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetLastnameOk() (*bool, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *UserDetails) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given bool and assigns it to the Lastname field.
func (o *UserDetails) SetLastname(v bool) {
	o.Lastname = &v
}

// GetLoginTime returns the LoginTime field value if set, zero value otherwise.
func (o *UserDetails) GetLoginTime() string {
	if o == nil || IsNil(o.LoginTime) {
		var ret string
		return ret
	}
	return *o.LoginTime
}

// GetLoginTimeOk returns a tuple with the LoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetLoginTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LoginTime) {
		return nil, false
	}
	return o.LoginTime, true
}

// HasLoginTime returns a boolean if a field has been set.
func (o *UserDetails) HasLoginTime() bool {
	if o != nil && !IsNil(o.LoginTime) {
		return true
	}

	return false
}

// SetLoginTime gets a reference to the given string and assigns it to the LoginTime field.
func (o *UserDetails) SetLoginTime(v string) {
	o.LoginTime = &v
}

// GetRdacAuthToken returns the RdacAuthToken field value if set, zero value otherwise.
func (o *UserDetails) GetRdacAuthToken() string {
	if o == nil || IsNil(o.RdacAuthToken) {
		var ret string
		return ret
	}
	return *o.RdacAuthToken
}

// GetRdacAuthTokenOk returns a tuple with the RdacAuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetRdacAuthTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RdacAuthToken) {
		return nil, false
	}
	return o.RdacAuthToken, true
}

// HasRdacAuthToken returns a boolean if a field has been set.
func (o *UserDetails) HasRdacAuthToken() bool {
	if o != nil && !IsNil(o.RdacAuthToken) {
		return true
	}

	return false
}

// SetRdacAuthToken gets a reference to the given string and assigns it to the RdacAuthToken field.
func (o *UserDetails) SetRdacAuthToken(v string) {
	o.RdacAuthToken = &v
}

// GetRemoteUser returns the RemoteUser field value if set, zero value otherwise.
func (o *UserDetails) GetRemoteUser() bool {
	if o == nil || IsNil(o.RemoteUser) {
		var ret bool
		return ret
	}
	return *o.RemoteUser
}

// GetRemoteUserOk returns a tuple with the RemoteUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetRemoteUserOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoteUser) {
		return nil, false
	}
	return o.RemoteUser, true
}

// HasRemoteUser returns a boolean if a field has been set.
func (o *UserDetails) HasRemoteUser() bool {
	if o != nil && !IsNil(o.RemoteUser) {
		return true
	}

	return false
}

// SetRemoteUser gets a reference to the given bool and assigns it to the RemoteUser field.
func (o *UserDetails) SetRemoteUser(v bool) {
	o.RemoteUser = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *UserDetails) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *UserDetails) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *UserDetails) SetRole(v string) {
	o.Role = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *UserDetails) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *UserDetails) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *UserDetails) SetSessionId(v string) {
	o.SessionId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UserDetails) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UserDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UserDetails) SetStatus(v string) {
	o.Status = &v
}

// GetTenantid returns the Tenantid field value if set, zero value otherwise.
func (o *UserDetails) GetTenantid() string {
	if o == nil || IsNil(o.Tenantid) {
		var ret string
		return ret
	}
	return *o.Tenantid
}

// GetTenantidOk returns a tuple with the Tenantid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetTenantidOk() (*string, bool) {
	if o == nil || IsNil(o.Tenantid) {
		return nil, false
	}
	return o.Tenantid, true
}

// HasTenantid returns a boolean if a field has been set.
func (o *UserDetails) HasTenantid() bool {
	if o != nil && !IsNil(o.Tenantid) {
		return true
	}

	return false
}

// SetTenantid gets a reference to the given string and assigns it to the Tenantid field.
func (o *UserDetails) SetTenantid(v string) {
	o.Tenantid = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UserDetails) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UserDetails) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *UserDetails) SetUser(v string) {
	o.User = &v
}

// GetWorkspace returns the Workspace field value if set, zero value otherwise.
func (o *UserDetails) GetWorkspace() string {
	if o == nil || IsNil(o.Workspace) {
		var ret string
		return ret
	}
	return *o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetWorkspaceOk() (*string, bool) {
	if o == nil || IsNil(o.Workspace) {
		return nil, false
	}
	return o.Workspace, true
}

// HasWorkspace returns a boolean if a field has been set.
func (o *UserDetails) HasWorkspace() bool {
	if o != nil && !IsNil(o.Workspace) {
		return true
	}

	return false
}

// SetWorkspace gets a reference to the given string and assigns it to the Workspace field.
func (o *UserDetails) SetWorkspace(v string) {
	o.Workspace = &v
}

// GetWorkspaceid returns the Workspaceid field value if set, zero value otherwise.
func (o *UserDetails) GetWorkspaceid() string {
	if o == nil || IsNil(o.Workspaceid) {
		var ret string
		return ret
	}
	return *o.Workspaceid
}

// GetWorkspaceidOk returns a tuple with the Workspaceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetWorkspaceidOk() (*string, bool) {
	if o == nil || IsNil(o.Workspaceid) {
		return nil, false
	}
	return o.Workspaceid, true
}

// HasWorkspaceid returns a boolean if a field has been set.
func (o *UserDetails) HasWorkspaceid() bool {
	if o != nil && !IsNil(o.Workspaceid) {
		return true
	}

	return false
}

// SetWorkspaceid gets a reference to the given string and assigns it to the Workspaceid field.
func (o *UserDetails) SetWorkspaceid(v string) {
	o.Workspaceid = &v
}

func (o UserDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authenticated) {
		toSerialize["authenticated"] = o.Authenticated
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsAuthenticated) {
		toSerialize["is_authenticated"] = o.IsAuthenticated
	}
	if !IsNil(o.IsWorkspaceadmin) {
		toSerialize["is_workspaceadmin"] = o.IsWorkspaceadmin
	}
	if !IsNil(o.IsWorkspacecreator) {
		toSerialize["is_workspacecreator"] = o.IsWorkspacecreator
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.LoginTime) {
		toSerialize["login_time"] = o.LoginTime
	}
	if !IsNil(o.RdacAuthToken) {
		toSerialize["rdac_auth_token"] = o.RdacAuthToken
	}
	if !IsNil(o.RemoteUser) {
		toSerialize["remote_user"] = o.RemoteUser
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.SessionId) {
		toSerialize["session_id"] = o.SessionId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tenantid) {
		toSerialize["tenantid"] = o.Tenantid
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Workspace) {
		toSerialize["workspace"] = o.Workspace
	}
	if !IsNil(o.Workspaceid) {
		toSerialize["workspaceid"] = o.Workspaceid
	}
	return toSerialize, nil
}

type NullableUserDetails struct {
	value *UserDetails
	isSet bool
}

func (v NullableUserDetails) Get() *UserDetails {
	return v.value
}

func (v *NullableUserDetails) Set(val *UserDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDetails(val *UserDetails) *NullableUserDetails {
	return &NullableUserDetails{value: val, isSet: true}
}

func (v NullableUserDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


